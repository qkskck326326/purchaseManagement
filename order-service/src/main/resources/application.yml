server:
  port: 8083

spring:
  application:
    name: order-service
  datasource:
    url: jdbc:mysql://order_db:3306/sparta
    username: root
    password: mysql3306
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
  kafka:
    bootstrap-servers: kafka:9092  # docker-compose에서 정의한 Kafka 브로커 주소
    consumer:
      group-id: product-group          # Consumer 그룹 ID
      auto-offset-reset: earliest   # 메시지를 처음부터 읽음
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

jwt:
  secret: bzeXpcSoWC6x5gq5c2gk7DaifjAofTWMpwxUWQYqT5qaLHNHlZWWYyKTXUKqjVo8

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka

logging:
  level:
    org.springframework.security: DEBUG