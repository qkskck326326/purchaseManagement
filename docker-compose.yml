services:
  kafka:
    image: bitnami/kafka:3.5.1
    container_name: kafka
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - kafka-data:/bitnami/kafka/data
    ports:
      - "9092:9092"
      - "9093:9093"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_CLUSTERS_0_NAME: "kraft-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      SERVER_PORT: "9094"

  user_db:
    image: mysql:8.0
    container_name: user_db
    environment:
      MYSQL_ROOT_PASSWORD: mysql3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h user_db -u root -p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      retries: 10

  product_db:
    image: mysql:8.0
    container_name: product_db
    environment:
      MYSQL_ROOT_PASSWORD: mysql3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h product_db -u root -p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      retries: 10

  order_db:
    image: mysql:8.0
    container_name: order_db
    environment:
      MYSQL_ROOT_PASSWORD: mysql3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3308:3306"
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h order_db -u root -p${MYSQL_ROOT_PASSWORD}" ]
      interval: 10s
      retries: 10

  redis:
    image: redis:latest
    container_name: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      retries: 10

volumes:
  kafka-data:
